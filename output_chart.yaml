---
# Source: sigstack/charts/dex/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sigstack-dex
  labels:
    helm.sh/chart: dex-0.12.0
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "2.35.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/createctconfig-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sigstack-ctlog-createctconfig
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/createtree-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ctlog-createtree
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/ctlog-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ctlog
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: sigstack/charts/fulcio/templates/createcerts-serviceacount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sigstack-fulcio-createcerts
  namespace: sigstack
  labels:
    helm.sh/chart: fulcio-1.0.0-rc.1
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: sigstack/charts/fulcio/templates/fulcio-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sigstack-fulcio-server
  namespace: sigstack
  labels:
    helm.sh/chart: fulcio-1.0.0-rc.1
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: sigstack/charts/rekor/charts/trillian/templates/mysql/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-mysql
  namespace: sigstack
  annotations:
    {}
---
# Source: sigstack/charts/rekor/charts/trillian/templates/trillian-log-server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-logserver
  namespace: sigstack
  annotations:
    {}
---
# Source: sigstack/charts/rekor/charts/trillian/templates/trillian-log-signer/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: "trillian-logsigner"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-logsigner
  namespace: sigstack
  annotations:
    {}
---
# Source: sigstack/charts/rekor/templates/redis/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: "redis"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
  name: sigstack-rekor-redis
  namespace: sigstack
  annotations:
    {}
---
# Source: sigstack/charts/rekor/templates/server/createtree-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sigstack-rekor-createtree
  namespace: sigstack
  labels:
    app.kubernetes.io/component: "server"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
---
# Source: sigstack/charts/rekor/templates/server/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: "server"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
  name: sigstack-rekor-server
  namespace: sigstack
  annotations:
    {}
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/ctlog-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: ctlog-config
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  __placeholder: |
    ###################################################################
    # Just a placeholder so that reapplying this won't overwrite treeID
    # if it already exists. This caused grief, do not remove.
    ###################################################################
---
# Source: sigstack/charts/fulcio/templates/fulcio-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sigstack-fulcio-server-config
  namespace: sigstack
  labels:
    helm.sh/chart: fulcio-1.0.0-rc.1
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.json: |-
    {
      "OIDCIssuers": {
        "https://dex.sigstack.core-primary-a.ny5.metalkube.net/auth": {
          "ClientID": "sigstack",
          "IssuerURL": "https://dex.sigstack.core-primary-a.ny5.metalkube.net/auth",
          "Type": "email"
        }
      }
    }
---
# Source: sigstack/charts/rekor/templates/server/configmap-sharding.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sigstack-rekor-sharding-config
  namespace: sigstack
  labels:
    app.kubernetes.io/component: "server"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
data:
  sharding-config.yaml: |
---
# Source: sigstack/charts/rekor/templates/server/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sigstack-rekor-config
  namespace: sigstack
  labels:
    app.kubernetes.io/component: "server"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
data:
  __placeholder: |
    ###################################################################
    # Just a placeholder so that reapplying this won't overwrite treeID
    # if it already exists. This caused grief, do not remove.
    ###################################################################
---
# Source: sigstack/charts/rekor/charts/trillian/templates/mysql/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-mysql
  namespace: sigstack
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: sigstack/charts/rekor/templates/server/pvc.yaml
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/component: "server"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
  name: sigstack-rekor-server
  namespace: sigstack
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "5Gi"
---
# Source: sigstack/charts/dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sigstack-dex
  labels:
    helm.sh/chart: dex-0.12.0
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "2.35.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["apiextensions.k8s.io"]
    resources: ["customresourcedefinitions"]
    verbs: ["list", "create"]
---
# Source: sigstack/charts/dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sigstack-dex-cluster
  labels:
    helm.sh/chart: dex-0.12.0
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "2.35.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: sigstack-dex
subjects:
- kind: ServiceAccount
  namespace: sigstack
  name: sigstack-dex
---
# Source: sigstack/templates/oidc-crb.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oidc-reviewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:service-account-issuer-discovery
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
---
# Source: sigstack/charts/dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sigstack-dex
  labels:
    helm.sh/chart: dex-0.12.0
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "2.35.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: ["dex.coreos.com"]
    resources: ["*"]
    verbs: ["*"]
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/cm-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ctlog-cm-operator
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps"]
    resourceNames: ["ctlog-config"]
    verbs: ["get", "update"]
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/secret-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ctlog-secret-operator
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps"]
    resourceNames: ["ctlog-config"]
    verbs: ["get", "update"]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["secrets"]
    verbs: ["create", "get", "update"]
---
# Source: sigstack/charts/fulcio/templates/secret-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sigstack-fulcio-server-secret-operator
  namespace: sigstack
  labels:
    helm.sh/chart: fulcio-1.0.0-rc.1
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["secrets"]
    verbs: ["create", "get", "update"]
---
# Source: sigstack/charts/rekor/templates/server/cm-operator-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: sigstack-rekor-cm-operator
  namespace: sigstack
  labels:
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.2"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["configmaps"]
    resourceNames: ["sigstack-rekor-config"]
    verbs: ["get", "update"]
---
# Source: sigstack/charts/dex/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sigstack-dex
  labels:
    helm.sh/chart: dex-0.12.0
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "2.35.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: sigstack-dex  
subjects:
- kind: ServiceAccount
  namespace: sigstack
  name: sigstack-dex
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/cm-operator-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ctlog-cm-operator
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ctlog-cm-operator
subjects:
  - kind: ServiceAccount
    name: ctlog-createtree
    namespace: sigstack
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/secret-operator-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ctlog-secret-operator
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ctlog-secret-operator
subjects:
  - kind: ServiceAccount
    name: sigstack-ctlog-createctconfig
    namespace: sigstack
---
# Source: sigstack/charts/fulcio/templates/secret-operataor-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sigstack-fulcio-server-secret-operator
  namespace: sigstack
  labels:
    helm.sh/chart: fulcio-1.0.0-rc.1
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sigstack-fulcio-server-secret-operator
subjects:
  - kind: ServiceAccount
    name: sigstack-fulcio-createcerts
    namespace: sigstack
---
# Source: sigstack/charts/rekor/templates/server/cm-operator-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: sigstack-rekor-cm-operator
  namespace: sigstack
  labels:
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.2"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: sigstack-rekor-cm-operator
subjects:
  - kind: ServiceAccount
    name: sigstack-rekor-createtree
    namespace: sigstack
---
# Source: sigstack/charts/dex/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sigstack-dex
  labels:
    helm.sh/chart: dex-0.12.0
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "2.35.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5556
      targetPort: http
      protocol: TCP
      appProtocol: http
    - name: telemetry
      port: 5558
      targetPort: telemetry
      protocol: TCP
      appProtocol: http
  selector:
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: sigstack
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/ctlog-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
  name: ctlog
  namespace: sigstack
spec:
  ports:
    - name: 6962-tcp
      port: 80
      protocol: TCP
      targetPort: 6962
    - name: 6963-tcp
      port: 6963
      protocol: TCP
      targetPort: 6963
  selector:
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
  type: "ClusterIP"
---
# Source: sigstack/charts/fulcio/templates/fulcio-service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    helm.sh/chart: fulcio-1.0.0-rc.1
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.1"
    app.kubernetes.io/managed-by: Helm
  name: sigstack-fulcio-server
  namespace: sigstack
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 5555
    - name: grpc
      port: 5554
      protocol: TCP
      targetPort: 5554
    - name: 2112-tcp
      port: 2112
      protocol: TCP
      targetPort: 2112
  selector:
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: sigstack
  type: "ClusterIP"
---
# Source: sigstack/charts/rekor/charts/trillian/templates/mysql/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-mysql
  namespace: sigstack
spec:
  ports:
    - name: 3306-tcp
      port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
  type: "ClusterIP"
---
# Source: sigstack/charts/rekor/charts/trillian/templates/trillian-log-server/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: "trillian-logserver"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-logserver
  namespace: sigstack
spec:
  ports:
    - name: 8091-tcp
      port: 8091
      protocol: TCP
      targetPort: 8091
    - name: 8090-tcp
      port: 8090
      protocol: TCP
      targetPort: 8090
  selector:
    app.kubernetes.io/component: "trillian-logserver"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
  type: "ClusterIP"
---
# Source: sigstack/charts/rekor/charts/trillian/templates/trillian-log-signer/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: "trillian-logsigner"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-logsigner
  namespace: sigstack
spec:
  ports:
    - name: 8091-tcp
      port: 8091
      protocol: TCP
      targetPort: 8091
  selector:
    app.kubernetes.io/component: "trillian-logsigner"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
  type: "ClusterIP"
---
# Source: sigstack/charts/rekor/templates/redis/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: "redis"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
  name: sigstack-rekor-redis
  namespace: sigstack
spec:
  ports:
    - name: 6379-tcp
      port: 6379
      protocol: TCP
      targetPort: 6379
  selector:
    app.kubernetes.io/component: "redis"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
  type: "ClusterIP"
---
# Source: sigstack/charts/rekor/templates/server/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: "server"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
  name: sigstack-rekor-server
  namespace: sigstack
spec:
  ports:
    - name: 3000-tcp
      port: 80
      protocol: TCP
      targetPort: 3000
    - name: 2112-tcp
      port: 2112
      protocol: TCP
      targetPort: 2112
  selector:
    app.kubernetes.io/component: "server"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
  type: "ClusterIP"
---
# Source: sigstack/charts/dex/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sigstack-dex
  labels:
    helm.sh/chart: dex-0.12.0
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "2.35.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dex
      app.kubernetes.io/instance: sigstack
  template:
    metadata:
      annotations:
      
      labels:
        app.kubernetes.io/name: dex
        app.kubernetes.io/instance: sigstack
    spec:
      serviceAccountName: sigstack-dex
      securityContext:
        {}
      containers:
        - name: dex
          securityContext:
            {}
          image: "ghcr.io/dexidp/dex:v2.35.1"
          imagePullPolicy: IfNotPresent
          args:
            - dex
            - serve
            - --web-http-addr
            - 0.0.0.0:5556
            - --telemetry-addr
            - 0.0.0.0:5558
            - /etc/dex/config.yaml
          env:
          ports:
            - name: http
              containerPort: 5556
              protocol: TCP
            - name: telemetry
              containerPort: 5558
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/live
              port: telemetry
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: telemetry
          resources:
            {}
          volumeMounts:
            - name: config
              mountPath: /etc/dex
              readOnly: true
      volumes:
        - name: config
          secret:
            secretName: sigstack-dex-config
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/ctlog-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ctlog
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ctlog
      app.kubernetes.io/instance: sigstack
  template:
    metadata:
      annotations:
        checksum/config: 722ecc0b711f0795e58cf518a9ff374a8d56ff2e19d8c6e5e3812740ebc43beb
        prometheus.io/path: /metrics
        prometheus.io/port: "6963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: ctlog
        app.kubernetes.io/instance: sigstack
    spec:
      serviceAccountName: ctlog
      containers:
        - name: ctlog
          image: "ghcr.io/sigstore/scaffolding/ct_server@sha256:7c791d3b7c15e817807f07d4cdb00406529a114702ad448ee857e1d0fc5fb5a9"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--http_endpoint=0.0.0.0:6962"
            - "--metrics_endpoint=0.0.0.0:6963"
            - "--log_config=/ctfe-config/ct_server.cfg"
            - "--alsologtostderr"
          volumeMounts:
            - name: keys
              mountPath: "/ctfe-keys"
              readOnly: true
            - name: config
              mountPath: "/ctfe-config"
              readOnly: true
          ports:            
            - containerPort: 6962
              protocol: TCP
            - containerPort: 6963
              protocol: TCP
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
      volumes:
        - name: keys
          secret:
            secretName: ctlog-secret
            items:
              - key: private
                path: privkey.pem
              - key: public
                path: pubkey.pem
              - key: rootca
                path: roots.pem
        - name: config
          configMap:
            name: ctlog-config
            items:
              - key: config
                path: ct_server.cfg
---
# Source: sigstack/charts/fulcio/templates/fulcio-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sigstack-fulcio-server
  namespace: sigstack
  labels:
    helm.sh/chart: fulcio-1.0.0-rc.1
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: fulcio
      app.kubernetes.io/instance: sigstack
  template:
    metadata:
      annotations:
        checksum/config: 95835311ea2080d73bcb18d2834919efc7b42b7bb53bcfa2435f0eb14c4c5ec8
      labels:
        app.kubernetes.io/name: fulcio
        app.kubernetes.io/instance: sigstack
    spec:
      serviceAccountName: sigstack-fulcio-server
      # This doesn't actually use Kubernetes credentials, so don't mount them in.
      automountServiceAccountToken: true
      containers:
        - name: sigstack-fulcio-server
          image: "gcr.io/projectsigstore/fulcio@sha256:bd8906588b8600824f0fea9ee8486e7e6654f1f88ccf7edc87445522b135c998"
          imagePullPolicy: "IfNotPresent"
          ports:            
            - containerPort: 5555
              protocol: TCP
            - containerPort: 5554
              protocol: TCP
            - containerPort: 2112
              protocol: TCP
          args:
            - "serve"
            - "--port=5555"
            - "--grpc-port=5554"
            - "--ca=fileca"
            - "--fileca-key"
            - "/var/run/fulcio-secrets/key.pem"
            - "--fileca-cert"
            - "/var/run/fulcio-secrets/cert.pem"
            - "--fileca-key-passwd"
            - "$(PASSWORD)"
            - "--ct-log-url=http://ctlog.sigstack.svc/fulcio"
          env:
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sigstack-fulcio-server-secret
                  key: password
          volumeMounts:
            - name: fulcio-config
              mountPath: /etc/fulcio-config
            - name: oidc-info
              mountPath: /var/run/fulcio
            - name: fulcio-cert
              mountPath: "/var/run/fulcio-secrets"
              readOnly: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
      volumes:
        - name: fulcio-config
          configMap:
            name: sigstack-fulcio-server-config
        - name: oidc-info
          projected:
            sources:
              - configMap:
                  name: kube-root-ca.crt
                  items:
                    - key: ca.crt
                      path: ca.crt
                      mode: 0666
        - name: fulcio-cert
          secret:
            secretName: sigstack-fulcio-server-secret
            items:
              - key: private
                path: key.pem
              - key: cert
                path: cert.pem
---
# Source: sigstack/charts/rekor/charts/trillian/templates/mysql/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: "mysql"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-mysql
  namespace: sigstack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "mysql"
      app.kubernetes.io/name: trillian
      app.kubernetes.io/instance: sigstack
  replicas: 1
  strategy:
    type: Recreate
    rollingUpdate: null
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "mysql"
        app.kubernetes.io/name: trillian
        app.kubernetes.io/instance: sigstack
        helm.sh/chart: trillian-0.1.10
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: trillian-mysql
      containers:
        - name: trillian-mysql
          image: "gcr.io/trillian-opensource-ci/db_server@sha256:22b7fddcb4bafc5692760d84dca5e86294363a94e8f0ecb8f5c39364d436e6d5"
          imagePullPolicy: "IfNotPresent"
          args:
            - --ignore-db-dir=lost+found
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sigstack-db-secrets
                  key: mysql-root-password
            - name: MYSQL_USER
              value: "mysql"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sigstack-db-secrets
                  key: mysql-password
            - name: MYSQL_DATABASE
              value: trillian
          ports:            
            - containerPort: 3306
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - /etc/init.d/mysql
              - status
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            exec:
              command:
              - /etc/init.d/mysql
              - status
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - name: storage
              mountPath: /var/lib/mysql
              subPath: 
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: trillian-mysql
---
# Source: sigstack/charts/rekor/charts/trillian/templates/trillian-log-server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: "trillian-logserver"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-logserver
  namespace: sigstack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "trillian-logserver"
      app.kubernetes.io/name: trillian
      app.kubernetes.io/instance: sigstack
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "trillian-logserver"
        app.kubernetes.io/name: trillian
        app.kubernetes.io/instance: sigstack
        helm.sh/chart: trillian-0.1.10
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: trillian-logserver
      initContainers:
        - name: "wait-for-trillian-db"
          image: "docker.io/toolbelt/netcat@sha256:7d921b6d368fb1736cb0832c6f57e426c161593c075847af3378eb3185801cea"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until nc -z -w 10 trillian-mysql 3306; do echo waiting for trillian-mysql; sleep 5; done;"]
      containers:
        - name: trillian-trillian-logserver
          image: "gcr.io/projectsigstore/trillian_log_server@sha256:75dbbfc4c0b64334b985c4971fe58c30b9dd73d7aa54b15cee61223ff92aebf3"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--storage_system=mysql"
            - "--mysql_uri=$(MYSQL_USER):$(MYSQL_PASSWORD)@tcp($(MYSQL_HOSTNAME):$(MYSQL_PORT))/$(MYSQL_DATABASE)"
            - "--rpc_endpoint=0.0.0.0:8091"
            - "--http_endpoint=0.0.0.0:8090"
            - "--alsologtostderr"
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: sigstack-db-secrets
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sigstack-db-secrets
                  key: mysql-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: sigstack-db-secrets
                  key: mysql-database
            - name: MYSQL_HOSTNAME
              value: trillian-mysql
            - name: MYSQL_PORT
              value: "3306"
          ports:            
            - containerPort: 8091
              protocol: TCP
            - containerPort: 8090
              protocol: TCP
          resources:
            {}
---
# Source: sigstack/charts/rekor/charts/trillian/templates/trillian-log-signer/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: "trillian-logsigner"
    app.kubernetes.io/name: trillian
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: trillian-0.1.10
    app.kubernetes.io/managed-by: Helm
  name: trillian-logsigner
  namespace: sigstack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "trillian-logsigner"
      app.kubernetes.io/name: trillian
      app.kubernetes.io/instance: sigstack
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "trillian-logsigner"
        app.kubernetes.io/name: trillian
        app.kubernetes.io/instance: sigstack
        helm.sh/chart: trillian-0.1.10
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: trillian-logsigner
      initContainers:
        - name: "wait-for-trillian-db"
          image: "docker.io/toolbelt/netcat@sha256:7d921b6d368fb1736cb0832c6f57e426c161593c075847af3378eb3185801cea"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until nc -z -w 10 trillian-mysql 3306; do echo waiting for trillian-mysql; sleep 5; done;"]
      containers:
        - name: trillian-trillian-logsigner
          image: "gcr.io/projectsigstore/trillian_log_signer@sha256:b56ed0b7b5e9813c91b208ba6041c9342f9a53162d96943374e59b5289090f1f"
          imagePullPolicy: "IfNotPresent"
          args:
            - "--storage_system=mysql"
            - "--mysql_uri=$(MYSQL_USER):$(MYSQL_PASSWORD)@tcp($(MYSQL_HOSTNAME):$(MYSQL_PORT))/$(MYSQL_DATABASE)"
            - "--rpc_endpoint=0.0.0.0:8091"
            - "--http_endpoint=0.0.0.0:8090"
            - "--force_master=true"
            - "--alsologtostderr"
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: sigstack-db-secrets
                  key: mysql-user
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sigstack-db-secrets
                  key: mysql-password
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: sigstack-db-secrets
                  key: mysql-database
            - name: MYSQL_HOSTNAME
              value: trillian-mysql
            - name: MYSQL_PORT
              value: "3306"
          ports:            
            - containerPort: 8091
              protocol: TCP
          resources:
            {}
---
# Source: sigstack/charts/rekor/templates/redis/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: "redis"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
  name: sigstack-rekor-redis
  namespace: sigstack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "redis"
      app.kubernetes.io/name: rekor
      app.kubernetes.io/instance: sigstack
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/component: "redis"
        app.kubernetes.io/name: rekor
        app.kubernetes.io/instance: sigstack
        helm.sh/chart: rekor-1.0.0-rc.2
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: sigstack-rekor-redis
      containers:
        - name: rekor-redis
          image: "docker.io/redis@sha256:6c42cce2871e8dc5fb3e843ed5c4e7939d312faf5e53ff0ff4ca955a7e0b2b39"
          imagePullPolicy: "IfNotPresent"
          args:
            - --bind
            - 0.0.0.0
            - --appendonly
            - "yes"
          ports:            
            - containerPort: 6379
              protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - test "$(redis-cli -h 127.0.0.1 ping)" = "PONG"
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
          volumeMounts:
            - name: storage
              mountPath: /data
      volumes:
        - name: storage
          emptyDir: {}
---
# Source: sigstack/charts/rekor/templates/server/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: "server"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
  name: sigstack-rekor-server
  namespace: sigstack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: "server"
      app.kubernetes.io/name: rekor
      app.kubernetes.io/instance: sigstack
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/config: 5e33fd335604effc4317497374767a29aa2ea0e1c2e8a19ac0df1d0d24ee77bf
        checksum/sharding_config: 1b82933da50dff2fadcb0321cbc1d26c2fed32dbb3063146dd03b3058fb74c58
        prometheus.io/path: /metrics
        prometheus.io/port: "2112"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/component: "server"
        app.kubernetes.io/name: rekor
        app.kubernetes.io/instance: sigstack
        helm.sh/chart: rekor-1.0.0-rc.2
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: sigstack-rekor-server
      initContainers:
        - name: "wait-for-trillian-log-server"
          image: "docker.io/curlimages/curl@sha256:dca6e1b1c8e7b8b8e7be4e79fc78a858d12fd56245cb31bfa281dbf7c73a6498"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until curl --max-time 10 http://trillian-logserver.sigstack:8090; do echo waiting for trillian-logserver; sleep 5; done;"]
      containers:
        - name: rekor-server
          image: "gcr.io/projectsigstore/rekor-server@sha256:eb351dc8daa63599b41406c4a7eafff6617adf9fc604818349159ccbb60e613a"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: TREE_ID
              valueFrom:
                configMapKeyRef:
                  name: sigstack-rekor-config
                  key: treeID
          args:
            - "serve"
            - "--trillian_log_server.address=trillian-logserver.sigstack"
            - "--trillian_log_server.port=8091"
            - "--trillian_log_server.sharding_config=/sharding/sharding-config.yaml"
            - "--redis_server.address=sigstack-rekor-redis"
            - "--redis_server.port=6379"
            - "--rekor_server.address=0.0.0.0"
            - "--rekor_server.signer=memory"
            - "--enable_retrieve_api=true"
            - "--trillian_log_server.tlog_id=$(TREE_ID)"
            - "--enable_attestation_storage"
            - "--attestation_storage_bucket=file:///var/run/attestations"
            - "--log_type=prod"
          ports:            
            - containerPort: 3000
              protocol: TCP
            - containerPort: 2112
              protocol: TCP
          volumeMounts:
            - name: sigstack-rekor-sharding-config
              mountPath: /sharding
            - name: storage
              mountPath: /var/run/attestations
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
      volumes:
        - name: sigstack-rekor-sharding-config
          configMap:
            name: sigstack-rekor-sharding-config
        - name: storage
          persistentVolumeClaim:
            claimName: sigstack-rekor-server
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/createctconfig-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: sigstack-ctlog-createctconfig
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 3600
  backoffLimit: 6
  template:
    spec:
      serviceAccountName: sigstack-ctlog-createctconfig
      restartPolicy: Never
      automountServiceAccountToken: true
      initContainers:
        - name: "wait-for-createtree-configmap"
          image: "docker.io/curlimages/curl@sha256:dca6e1b1c8e7b8b8e7be4e79fc78a858d12fd56245cb31bfa281dbf7c73a6498"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until curl --fail --header \"Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\" --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt --max-time 10 https://kubernetes.default.svc/api/v1/namespaces/$(NAMESPACE)/configmaps/ctlog-config | grep '\"treeID\":'; do echo waiting for Configmap ctlog-config; sleep 5; done;"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      containers:
        - name: sigstack-ctlog-createctconfig
          image: "ghcr.io/sigstore/scaffolding/createctconfig@sha256:2795b42d3b42cdb9eaf3825e0bca742963208a51e30d5a7173f8a68ac6d47732"
          imagePullPolicy: "IfNotPresent"
          args: [
            "--namespace=$(NAMESPACE)",
            "--configmap=ctlog-config",
            "--secret=ctlog-secret",
            "--fulcio-url=http://sigstack-fulcio-server.sigstack.svc",
            "--trillian-server=trillian-logserver.sigstack:8091",
            "--log-prefix=fulcio"
          ]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
---
# Source: sigstack/charts/fulcio/charts/ctlog/templates/createtree-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: ctlog-createtree
  namespace: sigstack
  labels:
    helm.sh/chart: ctlog-0.2.27
    app.kubernetes.io/name: ctlog
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "0.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      serviceAccountName: ctlog-createtree
      restartPolicy: Never
      automountServiceAccountToken: true
      containers:
        - name: ctlog-createtree
          image: "ghcr.io/sigstore/scaffolding/createtree@sha256:d5776d8a43632291e1c5a22a9266608db0daa0a11663445d701e327f2205974c"
          imagePullPolicy: "IfNotPresent"
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          args: [
            "--namespace=$(NAMESPACE)",
            "--configmap=ctlog-config",
            "--display_name=ctlog-createtree",
            "--admin_server=trillian-logserver.sigstack:8091"
          ]
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
---
# Source: sigstack/charts/fulcio/templates/createcerts-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: sigstack-fulcio-createcerts
  namespace: sigstack
  labels:
    helm.sh/chart: fulcio-1.0.0-rc.1
    app.kubernetes.io/name: fulcio
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "1.0.0-rc.1"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      serviceAccountName: sigstack-fulcio-createcerts
      restartPolicy: Never
      automountServiceAccountToken: true
      containers:
        - name: sigstack-fulcio-createcerts
          image: "ghcr.io/sigstore/scaffolding/createcerts@sha256:73e7ac35d0e5169bd14a5cb6caed2e7d44277dec3d1de92e08f4d055523089a1"
          imagePullPolicy: "IfNotPresent"
          args: ["--secret=sigstack-fulcio-server-secret"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
---
# Source: sigstack/charts/rekor/templates/server/createtree-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: "server"
    app.kubernetes.io/name: rekor
    app.kubernetes.io/instance: sigstack
    helm.sh/chart: rekor-1.0.0-rc.2
    app.kubernetes.io/managed-by: Helm
  name: sigstack-rekor-createtree
  namespace: sigstack
spec:
  ttlSecondsAfterFinished: 3600
  template:
    spec:
      serviceAccountName: sigstack-rekor-createtree
      restartPolicy: Never
      automountServiceAccountToken: true
      containers:
        - name: sigstack-rekor-createtree
          image: "ghcr.io/sigstore/scaffolding/createtree@sha256:03e7b3b068e61f65a730b7a95f498c76a02ddecb4f7a65e09b2753b66ac8399f"
          args: ["--namespace=$(NAMESPACE)",
            "--configmap=sigstack-rekor-config",
            "--display_name=rekortree",
            "--admin_server=trillian-logserver.sigstack:8091",
            "--force=false"
          ]
          env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
---
# Source: sigstack/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    argocd.argoproj.io/sync-wave: "20"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Facility: ny5";
  name: sigstack
  labels:
    app.kubernetes.io/name: sigstack
    helm.sh/chart: sigstack-0.1.0
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/managed-by: Helm
spec:
  ingressClassName: nginx
  rules:
    - host: rekor.sigstack.core-primary-a.ny5.metalkube.net
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name:  sigstack-rekor-server
                port:
                  name: 3000-tcp
    - host: fulcio.sigstack.core-primary-a.ny5.metalkube.net
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name:  sigstack-fulcio-server
                port:
                  name: http
    - host: dex.sigstack.core-primary-a.ny5.metalkube.net
      http:
        paths:
          - path: "/"
            pathType: Prefix
            backend:
              service:
                name:  sigstack-dex
                port:
                  name: http
  tls:
    - hosts:
        - rekor.sigstack.core-primary-a.ny5.metalkube.net
      secretName: rekor-tls
    - hosts:
        - fulcio.sigstack.core-primary-a.ny5.metalkube.net
      secretName: fulcio-tls
    - hosts:
        - dex.sigstack.core-primary-a.ny5.metalkube.net
      secretName: dex-tls
---
# Source: sigstack/templates/cluster-issuer.yaml
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: selfsigned-issuer
spec:
  selfSigned: {}
---
# Source: sigstack/templates/secret-pull.yaml
apiVersion: keymaker.equinixmetal.com/v1
kind: ExternalSecretPull
metadata:
  name: sigstack-db-secrets
  labels:
    k8s-app: sigstack
spec:
  backend: ssm
  mappings:
    - key: /prod/sigstack/ny5/core/primary/mysql-root-password/v1
      name: mysql-root-password
    - key: /prod/sigstack/ny5/core/primary/mysql-password/v1
      name: mysql-password
    - key: /prod/sigstack/ny5/core/primary/mysql-user/v1
      name: mysql-user
    - key: /prod/sigstack/ny5/core/primary/mysql-database/v1
      name: mysql-database
---
# Source: sigstack/templates/secret-pull.yaml
apiVersion: keymaker.equinixmetal.com/v1
kind: ExternalSecretPull
metadata:
  name: sigstack-dex-config
  labels:
    k8s-app: sigstack
spec:
  backend: ssm
  mappings:
    - key: /prod/sigstack/ny5/core/primary/dex-config/v1
      name: config.yaml
---
# Source: sigstack/charts/dex/templates/tests/no-config-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: sigstack-dex-config-test-no-create
  labels:
    helm.sh/chart: dex-0.12.0
    app.kubernetes.io/name: dex
    app.kubernetes.io/instance: sigstack
    app.kubernetes.io/version: "2.35.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
type: Opaque
data:
  config.yaml: "e30="
